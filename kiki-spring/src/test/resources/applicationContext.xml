<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<context:component-scan base-package="com.sxdx" />

<!--	<bean id="userAspect" class="com.sxdx.aspect.UserAspect"/>
	&lt;!&ndash;AOP配置（一）&ndash;&gt;
	<aop:config proxy-target-class="true">
		&lt;!&ndash; 切入点&ndash;&gt;
		<aop:pointcut id="pointcut" expression="execution(* com.sxdx.service.impl.UserServiceImpl.*(..)) and args(user)"/>
		<aop:aspect ref="userAspect" order="0">
			&lt;!&ndash;前置增强，在切入点选择的方法之前执行&ndash;&gt;
			<aop:before method="beforeAdvice" pointcut-ref="pointcut" arg-names="user"/>
			&lt;!&ndash;后置异常增强，在切入点选择的方法抛出异常时执行&ndash;&gt;
			<aop:after-throwing method="afterExceptionAdvice" pointcut-ref="pointcut" arg-names="user"/>
			&lt;!&ndash;后置返回增强，在切入点选择的方法正常返回时执行&ndash;&gt;
			<aop:after-returning method="afterReturningAdvice" pointcut-ref="pointcut" arg-names="user"/>
			&lt;!&ndash;后置最终增强，在切入点选择的方法返回时执行，不管是正常返回还是抛出异常都执行&ndash;&gt;
			<aop:after method="afterAdvice" pointcut-ref="pointcut" arg-names="user"/>
			&lt;!&ndash;
				环绕增强，环绕着在切入点选择的连接点处的方法所执行的通知，可以决定目标方法是否执行，
				什么时候执行，执行时是否需要替换方法参数，执行完毕是否需要替换返回值
			&ndash;&gt;
			<aop:around method="roundAdvice" pointcut-ref="pointcut" arg-names="p,user"/>
		</aop:aspect>
	</aop:config>-->


<!--	<bean id="dog2" class="com.sxdx.entity.Dog">
		<constructor-arg name="name" value="哈士奇"/>
		<constructor-arg name="age" value="3"/>
		&lt;!&ndash;此处通过构造器，将food注入到dog中&ndash;&gt;
		<constructor-arg name="food" ref="food"/>
	</bean>-->

<!--	<bean id="food" class="com.sxdx.entity.Food" scope="prototype">
		<constructor-arg name="name" value="骨头"/>
	</bean>-->



<!--	<bean id="userAspectAdvisor" class="com.sxdx.aspect.UserAspectAdvisor"/>
	<aop:config >
		&lt;!&ndash; 切入点&ndash;&gt;
		<aop:pointcut id="pointcut" expression="execution(* com.sxdx.service.impl.UserServiceImpl.*(..)) "/>
		<aop:advisor advice-ref="userAspectAdvisor" pointcut-ref="pointcut"/>
	</aop:config>-->

	<import resource="transaction.xml"/>

</beans>